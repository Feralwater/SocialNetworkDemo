{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Message/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","Name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","area","name","placeholder","submitButton","Dialogs","messagesPage","dialogsElement","dialogsData","map","messagesElements","messagesData","newMessageText","PageTitle","dialogs","dialogsItems","messages","values","sendMessage","compose","dispatch","addMessageActionCreator"],"mappings":"4NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCjB7EM,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCA1PD,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,2B,6GCabC,EAXI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,8BACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASX,GAAIM,EAAb,SAAoBP,EAAMa,Y,kBCO3BC,EAXC,SAACd,GAEb,OACI,8BACI,qBAAKS,UAAWC,IAAEK,QAAlB,SACKf,EAAMe,a,yCCHjBC,EAAcC,YAAiB,IActBC,cAAU,CAACC,KAAM,2BAAjBD,EAbQ,SAAClB,GACpB,OAAO,mCACH,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBP,UAAWC,IAAEiB,KAAMC,KAAM,iBAAkBC,YAAY,uBAC9D,8BACI,wBAAQpB,UAAWC,IAAEoB,aAArB,mCC6BDC,EAnCC,SAAC/B,GAEb,IAAIP,EAAQO,EAAMgC,aAEdC,EAAiBxC,EAAMyC,YAAYC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYE,KAAMF,EAAOiB,KACbpB,GAAIG,EAAOH,IADaG,EAAOH,OAE5F4B,EAAmB3C,EAAM4C,aAAaF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQP,OACpFf,EAAM6C,eAQ3B,OAAKtC,EAAMN,OAGP,mCACI,sBAAKe,UAAWC,IAAE6B,UAAlB,oBAEI,sBAAK9B,UAAWC,IAAE8B,QAAlB,UACI,qBAAK/B,UAAWC,IAAE+B,aAAlB,SACKR,IAEL,qBAAKxB,UAAWC,IAAEgC,SAAlB,SACKN,IAEL,cAAC,EAAD,CAAgBhB,SAjBZ,SAACuB,GACjB3C,EAAM4C,YAAYD,EAAOL,2BAGH,cAAC,IAAD,CAAUrC,GAAI,Y,wBCC7B4C,sBACX1C,aAlBkB,SAACV,GAEnB,MAAO,CACHuC,aAAcvC,EAAMuC,iBAIH,SAACc,GACtB,MAAO,CACHF,YAAa,SAACN,GACVQ,EAASC,YAAwBT,SASzC1C,IAFWiD,CAGbd","file":"static/js/4.f85598cb.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageTitle\":\"Dialogs_PageTitle__3tK6f\",\"dialogs\":\"Dialogs_dialogs__2ge7r\",\"dialogsItems\":\"Dialogs_dialogsItems__AjlRn\",\"active\":\"Dialogs_active__373R1\",\"dialog\":\"Dialogs_dialog__20OAA\",\"messages\":\"Dialogs_messages__2Adme\",\"message\":\"Dialogs_message__1Byrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3L4q6\",\"active\":\"DialogItem_active__7zsMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Fal6\"};","import s from './DialogItem.module.css'\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div>\r\n            <div className={s.dialog + ' ' + s.active}>\r\n                <NavLink to={path}>{props.Name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './Message.module.css'\r\nimport React from \"react\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   className={s.area} name={\"newMessageText\"} placeholder=\"write your message\"/>\r\n            <div>\r\n                <button className={s.submitButton}>add message</button>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElement = state.dialogsData.map(dialog => <DialogItem Name={dialog.name} key={dialog.id}\r\n                                                                     id={dialog.id}/>);\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id}/>);\r\n    let newMessageText = state.newMessageText;\r\n\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <>\r\n            <div className={s.PageTitle}>\r\n                Dialogs\r\n                <div className={s.dialogs}>\r\n                    <div className={s.dialogsItems}>\r\n                        {dialogsElement}\r\n                    </div>\r\n                    <div className={s.messages}>\r\n                        {messagesElements}\r\n                    </div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../../redux/messages-reducer\";\r\nimport Dialogs from \"../Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}