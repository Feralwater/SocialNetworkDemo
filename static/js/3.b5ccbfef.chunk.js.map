{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/Post/Posts-container.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","about","src","photos","large","alt","descr","name","Preloader","Post","message","post","text","marks","like","likeCount","dislike","dislikeCount","Posts","memo","postsElements","postData","reverse","map","wall","title","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","posts","handleSubmit","Field","component","Textarea","validate","required","placeholder","submitButton","reduxForm","form","PostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"4NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCjB7EM,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,4B,0CCA/FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,aAAe,8B,oBCAjJD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,wB,gJCE1IH,IAAML,U,QCyCnBS,EAxCgB,SAACN,GAAW,IAAD,EAERO,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASP,EAAMU,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAW,WACPD,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAeV,OACI,iCACMF,GACF,8BACI,sBAAMK,cAjBO,WACrBJ,GAAY,IAgBJ,SAAwCT,EAAMU,QAAU,gBAG3DF,GACD,8BACI,uBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAYeC,WAAW,EAAMC,OAlBnC,WACvBV,GAAY,GACZT,EAAMoB,aAAaV,IAiBJO,MAAOP,UCPfW,EAxBK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,QAASZ,EAAyB,EAAzBA,OAAQU,EAAiB,EAAjBA,aAEnC,OAAIE,EAKJ,8BACI,sBAAKC,UAAWC,IAAEC,MAAlB,UAEI,qBAAKC,IAAKJ,EAAQK,OAAOC,MAAOC,IAAI,KACpC,sBAAKN,UAAWC,IAAEM,MAAlB,UACI,mBAAGP,UAAWC,IAAEO,KAAhB,gCAEA,+CAGA,cAAC,EAAD,CAAwBrB,OAAQA,EAAQU,aAAcA,YAdvD,cAACY,EAAA,EAAD,K,qDCWAC,EAjBF,SAACjC,GACV,OAAO,8BACH,sBAAKuB,UAAWC,IAAEU,QAAlB,UACI,sBAAKX,UAAWC,IAAEW,KAAlB,UACI,qBAAKT,IAAI,2EAA2EG,IAAI,KAC1F,qBAAKN,UAAWC,IAAEY,KAAlB,SACKpC,EAAMkC,aAGb,sBAAKX,UAAWC,IAAEa,MAAlB,UACI,sBAAMd,UAAWC,IAAEc,KAAnB,SAA0BtC,EAAMuC,YAChC,sBAAMhB,UAAWC,IAAEgB,QAAnB,SAA6BxC,EAAMyC,wB,iCCN7CC,EAAQxC,IAAMyC,MAAK,SAAA3C,GAErB,IAAI4C,EAAgB,YAAI5C,EAAM6C,UAAUC,UAAUC,KAAI,SAACZ,GACnD,OAAO,cAAC,EAAD,CAAMD,QAASC,EAAKD,QACdK,UAAWJ,EAAKI,UAAWE,aAAcN,EAAKM,kBAO/D,OAAO,8BACH,sBAAKlB,UAAWC,IAAEwB,KAAlB,UACI,sCACA,oBAAIzB,UAAWC,IAAEyB,MAAjB,uBACA,cAAC,EAAD,CAAgBC,SARR,SAACC,GACbnD,EAAMoD,QAAQD,EAAOE,gBAQjB,8BACKT,YAOXU,EAAcC,YAAiB,IAEjCC,EAAiB,SAACxD,GAClB,OAAO,mCACH,uBAAMuB,UAAWC,IAAEiC,MAAOP,SAAUlD,EAAM0D,aAA1C,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAU9B,KAAM,cAAe+B,SAAU,CAACC,IAAUT,GAAcU,YAAa,uBAErG,wBAAQzC,UAAWC,IAAEyC,aAArB,8BAKZT,EAAiBU,YAAU,CAACC,KAAM,yBAAjBD,CAA2CV,GAC7Cd,Q,QCtBA0B,EAFQjE,aAfD,SAACV,GACnB,MAAO,CACHoD,SAAUpD,EAAM4E,YAAYxB,SAC5BQ,YAAa5D,EAAM4E,YAAYhB,gBAId,SAACiB,GACtB,MAAO,CACHlB,QAAS,SAACC,GACNiB,EAASC,YAAqBlB,QAKnBlD,CAA6CuC,GCJrD8B,EAbC,SAACxE,GAEb,OACI,gCAII,cAAC,EAAD,CAAasB,QAAStB,EAAMsB,QAASZ,OAAQV,EAAMU,OAAQU,aAAcpB,EAAMoB,eAC/E,cAAC,EAAD,Q,wBCHNqD,E,kLAGE,IAAIC,EAAS3E,KAAKC,MAAM2E,MAAMC,OAAOF,OAChCA,IACDA,EAAS3E,KAAKC,MAAM6E,mBAEhB9E,KAAKC,MAAM8E,QAAQC,KAAK,UAGhChF,KAAKC,MAAMgF,eAAeN,GAC1B3E,KAAKC,MAAMiF,UAAUP,K,+BAIrB,OACI,8BACI,cAAC,EAAD,2BAAa3E,KAAKC,OAAlB,IACSsB,QAASvB,KAAKC,MAAMsB,QACpBZ,OAAQX,KAAKC,MAAMU,OACnBU,aAAcrB,KAAKC,MAAMoB,sB,GApBnBlB,aAoChBgF,sBACX/E,aAXkB,SAACV,GACnB,MACI,CACI6B,QAAS7B,EAAM4E,YAAY/C,QAC3BZ,OAAQjB,EAAM4E,YAAY3D,OAC1BmE,iBAAkBpF,EAAME,KAAK+E,OAC7BhF,OAAQD,EAAME,KAAKD,UAKF,CAACsF,mBAAgBC,cAAW7D,mBACrD+D,IACAvF,IAHWsF,CAIbT","file":"static/js/3.b5ccbfef.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"ProfileInfo_about__16lfQ\",\"descr\":\"ProfileInfo_descr__1soAJ\",\"name\":\"ProfileInfo_name__1lLQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Posts_title__1oGdA\",\"wall\":\"Posts_wall__3jC28\",\"posts\":\"Posts_posts__3Ni1N\",\"area\":\"Posts_area__1IJwk\",\"submitButton\":\"Posts_submitButton__1XUWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Post_message__2M_XA\",\"post\":\"Post_post__3mvCU\",\"text\":\"Post_text__3BqwE\",\"marks\":\"Post_marks__8hRkJ\",\"like\":\"Post_like__kj_1e\",\"dislike\":\"Post_dislike__3VBAd\"};","import s from \"./ProfileStatus.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode.bind(this)}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) =>{\r\n\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\nreturn(\r\n    <div>\r\n        <div className={s.about}>\r\n            {/*<img src=\"https://vraki.net/sites/default/files/inline/images/20_32.jpg\" alt=\"\"/>*/}\r\n            <img src={profile.photos.large} alt=\"\"/>\r\n            <div className={s.descr}>\r\n                <b className={s.name}>Viktoriya Buyakova</b>\r\n                {/*<p>Date of birth: 23 may 1991 </p>*/}\r\n                <p>Minsk, Belarus</p>\r\n                {/*<p>Family status: married</p>*/}\r\n                {/*<p> Education: California Institute of Technology, 2013</p>*/}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div>\r\n        <div className={s.message}>\r\n            <div className={s.post}>\r\n                <img src=\"https://im0-tub-by.yandex.net/i?id=2cb24c2c89ec1d6a85b05d2949f810bf&n=13\" alt=\"\"/>\r\n              <div className={s.text}>\r\n                  {props.message}\r\n              </div>\r\n            </div>\r\n            <div className={s.marks}>\r\n                <span className={s.like}>{props.likeCount}</span>\r\n                <span className={s.dislike}>{props.dislikeCount}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import s from './Posts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postsElements = [...props.postData].reverse().map((post) => {\r\n        return <Post message={post.message}\r\n                     likeCount={post.likeCount} dislikeCount={post.dislikeCount}/>\r\n    });\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.wall}>\r\n            <p>posts</p>\r\n            <h2 className={s.title}>New post:</h2>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <>\r\n        <form className={s.posts} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]} placeholder={'Add your message'}/>\r\n            </div>\r\n            <button className={s.submitButton}>+ add post</button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\nexport default Posts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"../Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/Post/Posts-container\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={s.headerImg}>*/}\r\n            {/*    <img src=\"http://hotwalls.ru/wallpapers/dolka_kivi_i_chernye_kamni/download/2140x1333.jpg\"/>*/}\r\n            {/*</div>*/}\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"../Profile\"\r\nimport * as React from \"react\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.userId,\r\n            isAuth: state.auth.isAuth,\r\n        });\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}