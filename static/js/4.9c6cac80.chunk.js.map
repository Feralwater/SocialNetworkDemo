{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/Post/Posts-container.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","about","src","photos","large","userPhoto","mainPhoto","input","target","files","length","initialValues","formData","then","Post","message","post","alt","text","marks","like","likeCount","dislike","dislikeCount","Posts","memo","postsElements","postData","reverse","id","wall","title","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","posts","Field","component","name","validate","required","placeholder","submitButton","PostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/4.9c6cac80.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"ProfileInfo_about__16lfQ\",\"descr\":\"ProfileInfo_descr__1soAJ\",\"name\":\"ProfileInfo_name__1lLQE\",\"input\":\"ProfileInfo_input__1qxQx\",\"contact\":\"ProfileInfo_contact__3WfrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Posts_title__1oGdA\",\"wall\":\"Posts_wall__3jC28\",\"posts\":\"Posts_posts__3Ni1N\",\"area\":\"Posts_area__1IJwk\",\"submitButton\":\"Posts_submitButton__1XUWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Post_message__2M_XA\",\"post\":\"Post_post__3mvCU\",\"text\":\"Post_text__3BqwE\",\"marks\":\"Post_marks__8hRkJ\",\"like\":\"Post_like__kj_1e\",\"dislike\":\"Post_dislike__3VBAd\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b>   <span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.about}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input className={s.input} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div>\r\n        <div className={s.message}>\r\n            <div className={s.post}>\r\n                <img src=\"https://im0-tub-by.yandex.net/i?id=2cb24c2c89ec1d6a85b05d2949f810bf&n=13\" alt=\"\"/>\r\n              <div className={s.text}>\r\n                  {props.message}\r\n              </div>\r\n            </div>\r\n            <div className={s.marks}>\r\n                <span className={s.like}>{props.likeCount}</span>\r\n                <span className={s.dislike}>{props.dislikeCount}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import s from './Posts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postsElements = [...props.postData]\r\n        .reverse()\r\n        .map((post) => {\r\n        return <Post key={post.id} message={post.message}\r\n                     likeCount={post.likeCount} dislikeCount={post.dislikeCount}/>\r\n    });\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.wall}>\r\n            <p>posts</p>\r\n            <h2 className={s.title}>New post:</h2>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <>\r\n        <form className={s.posts} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]} placeholder={'Add your message'}/>\r\n            </div>\r\n            <button className={s.submitButton}>+ add post</button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\nexport default Posts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"../Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/Post/Posts-container\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={s.headerImg}>*/}\r\n            {/*    <img src=\"http://hotwalls.ru/wallpapers/dolka_kivi_i_chernye_kamni/download/2140x1333.jpg\"/>*/}\r\n            {/*</div>*/}\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"../Profile\"\r\nimport * as React from \"react\";\r\nimport {getStatus, getUserProfile,savePhoto, saveProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.userId,\r\n            isAuth: state.auth.isAuth,\r\n        });\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}